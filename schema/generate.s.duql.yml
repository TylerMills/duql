$schema: https://json-schema.org/draft/2020-12/schema
$id: https://duql.dev/schema/generate.s.duql.yml
title: DUQL Generate Function
description: |
  The generate function in DUQL is used to create new columns or modify existing ones.
  It supports various expressions, calculations, conditional logic, and SQL functions
  to derive new values based on existing data.
type: object
properties:
  generate:
    type: object
    additionalProperties:
      oneOf:
        - type: string
          description: Simple expression or column reference.
        - $ref: 'expression.s.duql.yml'
        - type: object
          properties:
            case:
              type: array
              items:
                type: object
                properties:
                  when:
                    $ref: 'expression.s.duql.yml'
                  then:
                    oneOf:
                      - type: string
                      - type: number
                      - $ref: 'expression.s.duql.yml'
                required: [when, then]
              minItems: 1
          required: [case]
          description: Case statement for conditional logic.
    minProperties: 1
    description: Key-value pairs where keys are new column names and values are expressions.
required: [generate]
additionalProperties: false

examples:
  - generate:
      full_name: f"{first_name} {last_name}"
      age: datediff(years, birth_date, current_date())
  - generate:
      discount:
        case:
          - when: total_purchases > 1000
            then: 0.15
          - when: total_purchases > 500
            then: 0.10
          - when: total_purchases > 100
            then: 0.05
          - when: true
            then: 0
  - generate:
      clean_text: sql"REGEXP_REPLACE(LOWER(text), '[^a-z0-9 ]', '')"
  - generate:
      revenue: price * quantity
      profit_margin: (revenue - cost) / revenue * 100
      performance:
        case:
          - when: profit_margin > 30
            then: "Excellent"
          - when: profit_margin > 20
            then: "Good"
          - when: profit_margin > 10
            then: "Average"
          - when: true
            then: "Poor"