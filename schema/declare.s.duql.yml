$schema: https://json-schema.org/draft/2020-12/schema
$id: https://example.com/declare.s.duql.yml
title: DUQL Variable Declaration
description: |
  Defines variable declarations in DUQL. These declarations can include simple aliases,
  tuples, function declarations, SQL interop, arrays, and complex expressions.
  When translated to PRQL, each key becomes an individual 'let' declaration.
type: object
propertyNames:
  pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
patternProperties:
  ^[a-zA-Z_][a-zA-Z0-9_]*$:
    oneOf:
      - $ref: pipeline.s.duql.yml 
      - name: Function Definition (String Form)
        type: string
        description: Function Definition for defining the declaration.
        examples:
          - low:0 high x -> (x - low) / (high - low)
          - col -> (col | text.lower | text.starts_with("a"))
          - (col | in ["PRQL", "Rust"])
      - type: Tuple
        description: A tuple (essentially an ad-hoc table)
        examples:
          - {x:2, y}
          - {foo:1, bar:baz}
      - name: Function Definition (DUQL Form)
        type: object
        properties:
          parameters:
            type: array
            examples: 
              - [low:0, high, x]
            description: |
              Positional parameters, which require an argument to be provided when used. (foo)
              Named parameters, which optionally take an argument, otherwise use their default value. (e.g. low:0)
          expression:
            $ref: expression.s.duql.yml