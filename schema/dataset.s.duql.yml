$schema: https://json-schema.org/draft/2020-12/schema
$id: https://duql.dev/schema/dataset.s.duql.yml
title: DUQL Dataset
description: |
  Defines the source of data for a DUQL query. 
  This can be a table name, a file path, a SQL query, or a complex query with its own steps.
  The dataset is the starting point for all DUQL queries and determines what data will be processed.
oneOf:
  - title: Dataset (simple)
    type: string
    description: |
      A simple string representation of the data source. This can be:
      - A table name (e.g., "users")
      - A file path with extension (e.g., "data/sales.csv")
      - A SQL query using the sql""" syntax (e.g., sql"""SELECT * FROM users;""")
      Gotcha: When using file paths, ensure they are relative to the query execution context or provide absolute paths.
  - title: Dataset (advanced)
    type: object
    properties:
      name:
        title: Dataset Name
        type: string
        description: |
          The identifier for the dataset. This can be:
          - A table name
          - A file path (with extension)
          - A SQL query
          - An alias for a subquery
          Gotcha: Ensure the name is unique within your query context to avoid conflicts.
      format:
        title: Data Format
        type: string
        enum: [table, csv, json, parquet]
        default: table
        description: |
          Specifies the format of the data source. Options are:
          - table: A database table (default)
          - csv: Comma-separated values file
          - json: JSON file or data
          - parquet: Apache Parquet file
          Gotcha: The 'table' format assumes the data source is a database table. For file-based sources, explicitly specify the format.
    required: [name]
    additionalProperties: false

examples:
  - customers

  - sql"SELECT * FROM orders WHERE date > '2023-01-01'"

  - /path/to/data/sales_2023.csv

  - name: transactions
    format: table

  - name: /data/logs/app_logs_*.json
    format: json

  - name: s3://my-bucket/analytics/user_behavior.parquet
    format: parquet

  - name: |
      sql'WITH recent_orders AS (
        SELECT * FROM orders
        WHERE order_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
      )
      SELECT c.customer_id, c.name, COUNT(o.order_id) as order_count
      FROM customers c
      LEFT JOIN recent_orders o ON c.customer_id = o.customer_id
      GROUP BY c.customer_id, c.name'
  
    format: table